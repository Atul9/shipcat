---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ mf.name }}
  namespace: dev

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ mf.name }}
  namespace: dev
spec:
  replicas: {{ mf.replicas.min }}
  minReadySeconds: 30
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: {{ mf.replicas.max - mf.replicas.min }}
      maxUnavailable: 0
  template:
    metadata:
      labels:
        k8s-app: {{ mf.name }}
    spec:
      serviceAccountName: {{ mf.name }}
      imagePullSecrets:
      - name: babylonhealth-deploy-dev-pull-secret
      containers:
      - name: {{ mf.name }}
        image: quay.io/babylonhealth/{{ mf.name }}:SHA_OR_TAG_HERE
        imagePullPolicy: IfNotPresent
        {% if mf.env %}env:
        {% for key, value in mf.env %}
        - name: {{ key }}
          value: "{{ value }}"
        {% endfor %}
        {% endif %}
        volumeMounts:
        - name: config-volume
          mountPath: /config/
        readinessProbe:
          httpGet:
            path: /content/health
            port: {{ healthPort }}
          initialDelaySeconds: 30
          periodSeconds: 30
      volumes:
      - name: config-volume
        configMap:
          name: {{ mf.name }}-config

---
kind: Service
apiVersion: v1
metadata:
  labels:
    k8s-app: {{ mf.name }}
  name: {{ mf.name }}
  namespace: dev
spec:
  {% if ports %}ports:
  {% for pm in ports %}
  - port: {{ pm.host }}
    targetPort: {{ pm.target }}
  {% endfor %}
  {% endif %}
  selector:
    k8s-app: {{ mf.name }}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ mf.name }}-config
  namespace: dev
data:
  config.ini: |-
    [SENTRY]
    DSN=https://f3865412307546@dev-uk-sentry.ops.babylontech.co.uk/43
  logging.conf: |-
    # Basic logging config for Python microservices
    [loggers]
    keys=root,babylon
  newrelic.ini: |-
    [newrelic]
    license_key = 007015786e56e693643ba29dcc4e59aee5e0ca42
    app_name = {{ mf.name }} (development)
